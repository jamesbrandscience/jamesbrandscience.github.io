strip.text = element_text(size = 20))
ercel_data_count %>%
ggplot(aes(x = time, y = count, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
# geom_point() +
# geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_emoji(emoji="1F947") +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_count %>%
ggplot(aes(x = time, y = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
# geom_point() +
# geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_emoji(emoji="1F947") +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_count %>%
ggplot(aes(x = time, y = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
# geom_point() +
# geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_emoji(emoji="1F947") +
# scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
# facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ggplot(mtcars, aes(wt, mpg))+ geom_emoji(emoji="1f697")
install.packages("ggtext")
library(ggtext)
ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE)
ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = sprintf("&#129351;"))
ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = "&#129351;")
ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = "🥇")
rcel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = sprintf("&#129351;"))
ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = "<img src='https://e.unicode-table.com/orig/4f/14f3dee66166bc0bf7967ba32fa111.png' width='25'/>")
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 18)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = "<img src='https://e.unicode-table.com/orig/4f/14f3dee66166bc0bf7967ba32fa111.png' width='15'/>")
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 20)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 4, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 20)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot
ercel_annotate <- ercel_data_count %>%
filter(count == max(count)) %>%
mutate(annotate1 = "<img src='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/240/apple/271/1st-place-medal_1f947.png' width='15'/>")
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 4, label = annotate1), inherit.aes = FALSE) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 20)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot
label.padding = grid::unit(rep(0, 4), "pt", inherit.aes = FALSE) +
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 4, label = annotate1), fill = NA, label.color = NA,
label.padding = grid::unit(rep(0, 4), "pt", inherit.aes = FALSE)) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 20)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot <- ercel_data_count %>%
ggplot(aes(x = time, y = count, colour = (count + 1)^2, label = count)) +
geom_segment(aes(x = time, y = 0, xend = time, yend = count)) +
geom_point() +
geom_label(nudge_y = 0.1, vjust = 0) +
# annotate(data = ercel_annotate, aes(x = time, y = count + 2, label = annotate1), inherit.aes = FALSE) +
geom_richtext(data = ercel_annotate, aes(x = time, y = count + 4, label = annotate1), fill = NA, label.color = NA,
label.padding = grid::unit(rep(0, 4), "pt")) +
scale_colour_gradient(low = "#de2d26", high = "#2ca25f") +
facet_grid(~day) +
scale_y_continuous(breaks = c(0, 5, 10, 15), limits = c(0, 20)) +
xlab(NULL) +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, size = 14, hjust = 1),
strip.text = element_text(size = 20))
ercel_data_plot
ercel_data <- read_csv("ercel_questionnaire.csv") %>%
rownames_to_column() %>%
mutate(`vaše jméno` = fct_anon((factor(rowname)), prefix = "anonymised"),
Finished = ifelse(`Response Type` == "Survey Preview", FALSE, Finished),
Progress = ifelse(`Response Type` == "Survey Preview", 50, Progress)) %>%
select(-1, -5, -15:-16, -25:-30)
write.csv(ercel_data, "ercel_questionnaire_data.csv", row.names = FALE)
write.csv(ercel_data, "ercel_questionnaire_data.csv", row.names = FALSE)
write.xlsx(ercel_data, "ercel_questionnaire_data.xlsx")
install.packages("here")
knitr::opts_chunk$set(echo = TRUE,
comment = NA)
knitr::knit_hooks$set(error = function(x, options) {
paste0("<pre style=\"color: #B5271E;\"><code>", x, "</code></pre>")
})
library(tippy)
set.seed(123)
# ercel_data <- read_csv("ercel_questionnaire.csv")
#
# ercel_data <- read_csv("ercel_questionnaire.csv") %>%
#   rownames_to_column() %>%
#   mutate(`vaše jméno` = fct_anon((factor(rowname)), prefix = "anonymised"),
#          Finished = ifelse(`Response Type` == "Survey Preview", FALSE, Finished),
#          Progress = ifelse(`Response Type` == "Survey Preview", 50, Progress)) %>%
#   select(-1, -5, -15:-16, -25:-30)
#
# write.csv(ercel_data, "ercel_questionnaire_data.csv", row.names = FALSE)
#
# library(openxlsx)
#
# write.xlsx(ercel_data, "ercel_questionnaire_data.xlsx")
library(here)
here()
here()
here()
here()
library(here)
here()
setwd("~/Downloads/ERCEL_R_tutorial")
library(here)
here()
here()
here()
setwd("~/Documents/GitHub/jamesbrandscience.github.io/tutorials/ERCEL")
here()
here()
setwd("~/Downloads/ERCEL_R_tutorial")
here()
library(here)
here()
here()
library(here)
here()
setwd(here())
library(here)
setwd(here())
here()
here::dr_here()
set_here()
setwd("~/")
library(here)
here()
set_here()
#this line of code is important and sets the working directory
#(which is the folder that contains all the files required for your code to work)
#please make sure you run this line of code first
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
#this line of code is important and sets the working directory
#(which is the folder that contains all the files required for your code to work)
#please make sure you run this line of code first
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
ercel_data_raw <- read_csv("Data/ercel_questionnaire_data.csv")
View(ercel_data_raw)
#data cleaning steps
ercel_data_clean <- ercel_data_raw %>%
filter(Finished == TRUE) %>% #remove the participant who did not finish
select(vaše_jméno, starts_with("day")) #only keep these variables
View(ercel_data_clean)
#make the ercel_data_clean data long
ercel_data_long <- ercel_data_clean %>%
pivot_longer(cols = starts_with("day"),
names_to = "day",
values_to = "time")
View(ercel_data_long)
#pivot from long to wide
ercel_data_long %>%
pivot_wider(names_from = day,
values_from = time)
#make the time variable have separate rows for each values
ercel_data_long_rows <- ercel_data_long %>%
separate_rows(time,
sep = ",")
View(ercel_data_long_rows)
#remove the "day_" prefix from the the day column"
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(day_test = str_remove(string = day,
pattern = "day_"))
#remove the "day_" prefix from the the day column"
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(day = str_remove(string = day,
pattern = "day_"))
#remove the "day_" prefix from the the day column"
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(time = fct_explicit_na(f = time,
na_level = "none"))
#relevel the day and time variables so they are in a specificed order (not alphabetical)
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(day = fct_relevel(day,
"pondělí",
"úterý",
"středa",
"čtvrtek",
"pátek"),
time = fct_relevel(time,
"9.00-10.30am",
"10.30am-12.00pm",
"12.00-1.30pm",
"1.30-3.00pm",
"3.00-4.30pm",
"none"))
#relevel the day and time variables so they are in a specificed order (not alphabetical)
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(day = fct_relevel(f =day,
"pondělí",
"úterý",
"středa",
"čtvrtek",
"pátek"),
time = fct_relevel(f= time,
"9.00-10.30am",
"10.30am-12.00pm",
"12.00-1.30pm",
"1.30-3.00pm",
"3.00-4.30pm",
"none"))
#relevel the day and time variables so they are in a specificed order (not alphabetical)
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(day = fct_relevel(.f = day,
"pondělí",
"úterý",
"středa",
"čtvrtek",
"pátek"),
time = fct_relevel(time,
"9.00-10.30am",
"10.30am-12.00pm",
"12.00-1.30pm",
"1.30-3.00pm",
"3.00-4.30pm",
"none"))
#create a new variable called time_category where any values that are "9.00-10.30am", "10.30am-12.00pm" are "morning" and every other value is "afternoon"
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(time_category = ifelse(time %in% c("9.00-10.30am", "10.30am-12.00pm"),
"morning",
"afternoon"))
#create a new variable called time_category where any values that are "9.00-10.30am", "10.30am-12.00pm" are "morning" and every other value is "afternoon"
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(time_category = ifelse(time %in% c("9.00-10.30am"),
"morning",
"afternoon"))
#create a new variable called time_category where any values that are "9.00-10.30am", "10.30am-12.00pm" are "morning" and every other value is "afternoon"
ercel_data_long_rows <- ercel_data_long_rows %>%
mutate(time_category = ifelse(time %in% c("9.00-10.30am", "10.30am-12.00pm", "12.00-1.30pm"),
"morning",
"afternoon"))
#create the final data using different processing steps
ercel_data <- read_csv(file = "Data/ercel_questionnaire_data.csv") %>%
filter(Finished == TRUE) %>%
select(vaše_jméno, starts_with("day")) %>%
pivot_longer(starts_with("day"), names_to = "day", values_to = "time") %>%
separate_rows(time, sep = ",") %>%
mutate(day = str_remove(day, "day_"),
day = fct_relevel(day, "pondělí",
"úterý",
"středa",
"čtvrtek",
"pátek"),
time = fct_explicit_na(time, na_level = "none"),
time = fct_relevel(time,
"9.00-10.30am",
"10.30am-12.00pm",
"12.00-1.30pm",
"1.30-3.00pm",
"3.00-4.30pm",
"none"),
time_category = ifelse(time %in% c("9.00-10.30am", "10.30am-12.00pm"),
"morning",
"afternoon"))
View(ercel_data)
#create the final data using different processing steps
ercel_data <- read_csv(file = "Data/ercel_questionnaire_data.csv") %>%
filter(Finished == TRUE) %>%
select(vaše_jméno, starts_with("day")) %>%
pivot_longer(starts_with("day"), names_to = "day", values_to = "time") %>%
separate_rows(time, sep = ",") %>%
mutate(day = str_remove(day, "day_"),
day = fct_relevel(day, "pondělí",
"úterý",
"středa",
"čtvrtek",
"pátek"),
time = fct_explicit_na(time, na_level = "none")),
# time = fct_relevel(time,
#                    "9.00-10.30am",
#                    "10.30am-12.00pm",
#                    "12.00-1.30pm",
#                    "1.30-3.00pm",
#                    "3.00-4.30pm",
#                    "none"),
time_category = ifelse(time %in% c("9.00-10.30am", "10.30am-12.00pm"),
"morning",
"afternoon"))
#create the final data using different processing steps
ercel_data <- read_csv(file = "Data/ercel_questionnaire_data.csv") %>%
filter(Finished == TRUE) %>%
select(vaše_jméno, starts_with("day")) %>%
pivot_longer(starts_with("day"), names_to = "day", values_to = "time") %>%
separate_rows(time, sep = ",") %>%
mutate(day = str_remove(day, "day_"),
day = fct_relevel(day, "pondělí",
"úterý",
"středa",
"čtvrtek",
"pátek"),
time = fct_explicit_na(time, na_level = "none"),
# time = fct_relevel(time,
#                    "9.00-10.30am",
#                    "10.30am-12.00pm",
#                    "12.00-1.30pm",
#                    "1.30-3.00pm",
#                    "3.00-4.30pm",
#                    "none"),
time_category = ifelse(time %in% c("9.00-10.30am", "10.30am-12.00pm"),
"morning",
"afternoon"))
View(ercel_data)
df <- data.frame(x = c(NA, "x.y", "x.z", "y.z"))
View(df)
df %>%
separate(x, c("A", "B"))
ercel_data_long %>%
separate(time, c("A", "B", "C", "D", "E"), sep = ",")
ercel_data_long %>%
separate(time, c("A", "B", "C", "D", "E"), sep = ",") %>%
View()
